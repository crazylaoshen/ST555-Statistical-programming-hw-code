setwd("D:/st512/hw3")
enzyme <- read.delim("D:/st512/hw3/enzyme.txt")
View(enzyme)
slr1 <- lm(count~conc,data=enzyme,xlab="concerntration", ylab="count")
slr1 <- lm(count~conc,data=enzyme)
slr1
summary(slr1)
plot(count~conc,data=enzyme,xlab="concerntration", ylab="count")
resid(slr1)
fitted(slr1)
plot(x=fitted(slr1),y=resid(slr1),xlab="Fitted values", ylab="Residuals")
abline(h=0,lty="dashed")
qqnorm(y=resid(slr1))
qqline(y=resid(slr1))
enzyme$log.count <- log(enzyme$count)
slr2 <- lm(log.count~conc,data=enzyme)
slr2
slr1
summary(slr2)
plot(x=fitted(slr2),y=resid(slr2),xlab="Fitted values", ylab="Residuals")
abline(h=0,lty="dashed")
qqnorm(y=resid(slr2))
plot(x=fitted(slr2),y=resid(slr2),xlab="Fitted values", ylab="Residuals")
plot(x=fitted(slr1),y=resid(slr1),xlab="Fitted values", ylab="Residuals")
slr3 <- lm(log(count)~log(conc),data=enzyme)
slr3
summary(slr3)
save.image("D:/st512/hw3/workspacehw3.RData")
savehistory("D:/st512/hw3/historyhw3.Rhistory")
x.values <- seq(from=0,to=1,length=20)
errors <- rnorm(n=20,mean=0,sd=1)
y.values=1+0*x.values+errors
y.values=1+errors
plot(x=x.values,y=y.values)
slr1 <- lm(y.values~x.values)
abline(slr1)#add a line to plot
summary(slr1)
x <- double(10)
fix(x)
p <- summary(slr1)$coefficients[2,4]
p <- summary(slr1)$coefficients[3,4]
p <- summary(slr1)$coefficients[1,4]
summary(slr1)
p <- summary(slr1)$coefficients[2,4]
p <- summary(slr1)$coefficients[2,3]
install.packages("highfrequency")
DF <- data.frame(a=1:5,b=6:10)
View(DF)
View(DF)
matrix(DF)
as.matrix(DF)
af<- matrix(df)
af<- matrix(DF)
View(af)
af
df
DF
matrix(1:10,2)
BF<-matrix(1:10,2)
matrix(BF)
as.matrix(BF)
install.packages("matrix")
install.packages("Matrix")
install.packages("ggplot2")
install.packages("base")
install.packages("base")
install.packages("base")
install.packages("base")
install.packages("base")
install.packages("base")
X <- -3
y <- 10
combineXy <- (X,y)
source('~/.active-rstudio-document', echo=TRUE)
combineXy
rm(list = ls())
help(mean)
help(print)
int <- c(1:50)
powertwo <- 2^int
squaredt50 <- int^2
equal <- powertwo == squaredt50
num <- sum(equal == 0)
print(powertwo[equal])
int <- c(1:50)
powertwo <- 2^int
squared50 <- int^2
equal <- powertwo == squaredt50
num <- sum(equal == 0)
print(powertwo[equal] squared50[equal])
squared50[equal]
---
title: "ST555 Homework 11"
author: "Ji Shen"
date: "Thursday, April 09, 2015"
output: html_document
---
This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.
When you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:
```{r}
# clean dataset
rm(list = ls())
```
# Question 1
```{r}
# part 1
int <- c(1:50)# Create a vector “ints” that contains the integers from 1 to 50.
# part 2
powertwo <- 2^int #Create a vector “powertwo” that raises the integers 1 to 50 to the power of 2
```
# Question 2
```{r}
squart50 <- int^2# Create a vector called “squared50” that captures n2 for the first 50 integers
```
# Question 3
```{r}
equal <- powertwo == squaredt50 #Create a vector “equal” that holds the logical operators integers
numEqual <- sum(equal == 1) # There are 2 pairs
print(powertwo[equal])
```
```{r}
# clean dataset
rm(list = ls())
```
```
print(powertwo[equal]) # print out the pairs  which satisfy equality
---
title: "ST555 Homework 11"
author: "Ji Shen"
date: "Thursday, April 09, 2015"
output: html_document
---
This is an R Markdown document. Markdown is a simple formatting syntax for authoring HTML, PDF, and MS Word documents. For more details on using R Markdown see <http://rmarkdown.rstudio.com>.
When you click the **Knit** button a document will be generated that includes both content as well as the output of any embedded R code chunks within the document. You can embed an R code chunk like this:
```{r}
# clean dataset
rm(list = ls())
```
# Question 1
```{r}
# part 1
int <- c(1:50)# Create a vector “ints” that contains the integers from 1 to 50.
# part 2
powertwo <- 2^int #Create a vector “powertwo” that raises the integers 1 to 50 to the power of 2
```
# Question 2
```{r}
squart50 <- int^2# Create a vector called “squared50” that captures n2 for the first 50 integers
```
# Question 3
```{r}
equal <- powertwo == squaredt50 #Create a vector “equal” that holds the logical operators integers
numEqual <- sum(equal == 1) # There are 2 pairs
print(powertwo[equal]) # print out the pairs  which satisfy equality
```
```{r}
# clean dataset
rm(list = ls())
```
# part 1
int <- c(1:50)# Create a vector “ints” that contains the integers from 1 to 50.
# part 2
powertwo <- 2^int
squart50 <- int^2#
equal <- powertwo == squaredt50 #Create a vector “equal” that holds the logical operators integers
numEqual <- sum(equal == 1) # There are 2 pairs
print(powertwo[equal])
squared50 <- int^2# Create a vector called “squared50” that captures n2 for the first 50 integers
```
# Question 3
```{r}
equal <- powertwo == squared50 #Create a vector “equal” that holds the logical operators integers
numEqual <- sum(equal == 1) # There are 2 pairs
print(powertwo[equal]) # pr
numEqual
setwd("D:/google drive/NC semester 6/st555/HW12")
getwd
tu <- 3
tu
getwd
help getwd
help(getwd)
getwd
getwd()
library(MASS)
data(Cars93)
dim(Cars93)
name <- names(Cars93)
name
length(name)
TypeOfcar <- table(Cars93$Type) # counting rows of data
TypeOfcar
NumSporty <- sum(Cars93$Type == 'Sporty')
NumSprty
NumSporty
mpg.city <- summary(MPG.city)
mpg.city <- summary(Cars93$MPG.city)
mpg.city
mpg.city <- summary(Cars93$mpg.city)
mpg.city
mpg.city <- summary(Cars93$MPG.city)
mpg.city
boxplot(mpg.city,Cars93$Type)
boxplot(split(mpg.city,Cars93$Type)
boxplot(split(mpg.city,Cars93$Type),names=c(Cars93$Type))
boxplot(split(mpg.city,Cars93$Type),names=c(Cars93$Type))
boxplot(split(Cars$MPG.city,Cars93$Type))
boxplot(split(Cars93$MPG.city,Cars93$Type))
x <- c(Price, Highway miles per gallon, Length, Horsepower)
attach(Cars93)
x <- c(Price, Highway miles per gallon, Length, Horsepower)
x <- c(Price, MPG.highway, Length, Horsepower)
par(mfrow=c(4,4)) # all plots in one page
opts=c("Price", "MPG.highway", "Length", "Horsepower")
for(i in 1:length(opts)){
heading = paste("type=",opts[i])
plot(x, mpg.city, type="n", main=heading)
lines(x, mpg.city, type=opts[i])
}
}
x <- c(Price, MPG.highway, Length, Horsepower)
par(mfrow=c(4,4)) # all plots in one page
opts=c("Price", "MPG.highway", "Length", "Horsepower")
for(i in 1:length(opts)){
heading = paste("type=",opts[i])
plot(x, mpg.city, type="n", main=heading)
lines(x, mpg.city, type=opts[i])
}
x <- c(Price, MPG.highway, Length, Horsepower)
par(mfrow=c(4,4)) # all plots in one page
opts=c("Price", "MPG.highway", "Length", "Horsepower")
for(i in 1:length(opts)){
heading = paste("type=",opts[i])
plot(x(i), mpg.city, type="n", main=heading)
}
opts=c("Price", "MPG.highway", "Length", "Horsepower")
for(i in 1:length(opts)){
heading = paste("type=",opts[i])
plot(x[i], mpg.city, type="n", main=heading)
}
x <- matrix(
c(Price, MPG.highway, Length, Horsepower),
nrow=4)
dim(x)
par(mfrow=c(4,4)) # all plots in one page
opts=c("Price", "MPG.highway", "Length", "Horsepower")
for(i in 1:length(opts)){
heading = paste("type=",opts[i])
plot(x[i], mpg.city, type="n", main=heading)
}
length(mpg.city)
length(MPG.city)
for(i in 1:length(opts)){
heading = paste("type=",opts[i])
plot(x[i], MPG.city, type="n", main=heading)
}
)
length(x[1])
length(x[1,])
opts=c("Price", "MPG.highway", "Length", "Horsepower")
for(i in 1:length(opts)){
heading = paste("type=",opts[i])
plot(x[i,], MPG.city, type="n", main=heading)
}
par(mfrow=c(4,4)) # all plots in one page
opts=c("Price", "MPG.highway", "Length", "Horsepower")
for(i in 1:length(opts)){
heading = paste("type=",opts[i])
plot(x[i,], MPG.city, type="n", main=heading)
}
par(mfrow=c(2,2)) # all plots in one page
opts=c("Price", "MPG.highway", "Length", "Horsepower")
for(i in 1:length(opts)){
heading = paste("type=",opts[i])
plot(x[i,], MPG.city, type="n", main=heading)
}
length(opts)
par(mfrow=c(2,2)) # all plots in one page
opts=c("Price", "MPG.highway", "Length", "Horsepower")
for(i in 1:length(opts)){
heading = opts[i]
plot(x[i,], MPG.city, type="o", main=heading)
}
par(mfrow=c(2,2)) # all plots in one page
opts=c("Price", "MPG.highway", "Length", "Horsepower")
for(i in 1:length(opts)){
heading = opts[i]
plot(x[i,], MPG.city, type="p", main=heading)
}
par(mfrow=c(2,2)) # all plots in one page
opts=c("Price", "MPG.highway", "Length", "Horsepower")
for(i in 1:length(opts)){
heading = opts[i]
plot(opts[i], MPG.city, type="p", main=heading)
}
plot(Price,MPG.city)
x[i,]==Price
class(x[1,])
x[1,]==Price
dim(x[1,])
length(x[1,])
length(x[1,])==length(Price)
x[1,]
Price
nrow=4,ncol=93)
x <- matrix(
c(Price, MPG.highway, Length, Horsepower),
nrow=4,ncol=93)
x[1,]==Price
x <- matrix(
c(Price, MPG.highway, Length, Horsepower),
nrow=93)
x[1,]==Price
x[,1]==Price
par(mfrow=c(2,2)) # all plots in one page
opts=c("Price", "MPG.highway", "Length", "Horsepower")
for(i in 1:length(opts)){
heading = opts[i]
plot(x[,i], MPG.city, type="p", main=heading)
}
par(mfrow=c(2,2)) # all plots in one page
opts=c("Price", "MPG.highway", "Length", "Horsepower")
for(i in 1:length(opts)){
heading = opts[i]
plot(x[,i], MPG.city, type="p", xlab=heading)
}
attach(Cars93)
x <- matrix(
c(Price, MPG.highway, Length, Horsepower),
ncol=4)
par(mfrow=c(2,2)) # all plots in one page
opts=c("Price", "MPG.highway", "Length", "Horsepower")
for(i in 1:length(opts)){
plot(x[,i], MPG.city, type="p", xlab=opts[i])
}
for(i in 1:length(opts)){
plot(x[,i], MPG.city, type="p", xlab=opts[i])
corr(x[,i],MPG.city)
}
for(i in 1:length(opts)){
plot(x[,i], MPG.city, type="p", xlab=opts[i])
cor(x[,i],MPG.city)
}
for(i in 1:length(opts)){
plot(x[,i], MPG.city, type="p", xlab=opts[i]),
cor(x[,i],MPG.city)
}
for(i in 1:length(opts)){
plot(x[,i], MPG.city, type="p", xlab=opts[i]),
cor(x[,i],MPG.city)
}
for(i in 1:length(opts)){
plot(x[,i], MPG.city, type="p", xlab=opts[i])
cor(x[,i],MPG.city)
}
opts=c("Price", "MPG.highway", "Length", "Horsepower")
for(i in 1:length(opts)){
plot(x[,i], MPG.city, type="p", xlab=opts[i])
}
opts=c("Price", "MPG.highway", "Length", "Horsepower")
for(i in 1:length(opts)){
plot(x[,i], MPG.city, type="p", xlab=opts[i])
}
c(Price, MPG.highway, Length, Horsepower),
ncol=4)
par(mfrow=c(2,2)) # all plots in one page
opts=c("Price", "MPG.highway", "Length", "Horsepower")
for(i in 1:length(opts)){
plot(x[,i], MPG.city, type="p", xlab=opts[i])
}
x <- matrix(
c(Price, MPG.highway, Length, Horsepower),
ncol=4)
par(mfrow=c(2,2)) # all plots in one page
opts=c("Price", "MPG.highway", "Length", "Horsepower")
for(i in 1:length(opts)){
plot(x[,i], MPG.city, type="p", xlab=opts[i]),   cor(x[,i],MPG.city)
}
for(i in 1:length(opts)){
cor(x[,i],MPG.city)
}
cor(x[,4],MPG.city)
cor(x[,3],MPG.city)
cor(x[,1],MPG.city)
for(i in 1:length(opts)){
CORR[i] <- cor(x[,i], MPG.city)
}
CORR <- numeri(4)
for(i in 1:length(opts)){
CORR[i] <- cor(x[,i], MPG.city)
}
CORR <- numeri(4)
CORR <- numeric(4)
for(i in 1:length(opts)){
CORR[i] <- cor(x[,i], MPG.city)
}
min(CORR)
?min
which.min(CORR)
which.max(CORR)
names(CORR)<-opts
which.min(CORR)
which.max(CORR)
CORR
